#####################################################################
#   Macro
#####################################################################


##############
# Print Start
##############
[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
gcode:
  # This part fetches data from your slicer. Such as bed temp, extruder temp, chamber temp and size of your printer.
  {% set target_bed = params.BED|int %}
  {% set target_extruder = params.EXTRUDER|int %}
  {% set target_chamber = params.CHAMBER|default("40")|int %}
  {% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}
  {% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %}

  # Homes the printer, sets absolute positioning and updates the Stealthburner leds.
  STATUS_HOMING         # Sets SB-leds to homing-mode
  G28                   # Full home (XYZ)
  G90                   # Absolut position

  ##  Uncomment for bed mesh (1 of 2)
  BED_MESH_CLEAR       # Clears old saved bed mesh (if any)
  M190 S{target_bed}

  # Checks if the bed temp is higher than 90c - if so then trigger a heatsoak.
  # {% if params.BED|int > 90 %}
  #   SET_DISPLAY_TEXT MSG="Bed: {target_bed}c"           # Displays info
  #   STATUS_HEATING                                      # Sets SB-leds to heating-mode
  #   M106 S255                                           # Turns on the PT-fan

  #   ##  Uncomment if you have a Nevermore.
  #   #SET_PIN PIN=nevermore VALUE=1                      # Turns on the nevermore

  #   G1 X{x_wait} Y{y_wait} Z15 F9000                    # Goes to center of the bed
  #   M190 S{target_bed}                                  # Sets the target temp for the bed
  #   SET_DISPLAY_TEXT MSG="Heatsoak: {target_chamber}c"  # Displays info
  #   TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={target_chamber}   # Waits for chamber to reach desired temp

  # # If the bed temp is not over 90c, then it skips the heatsoak and just heats up to set temp with a 5min soak
  # {% else %}
  #   SET_DISPLAY_TEXT MSG="Bed: {target_bed}c"           # Displays info
  #   STATUS_HEATING                                      # Sets SB-leds to heating-mode
  #   G1 X{x_wait} Y{y_wait} Z15 F9000                    # Goes to center of the bed
  #   M190 S{target_bed}                                  # Sets the target temp for the bed
  #   SET_DISPLAY_TEXT MSG="Soak for 5min"                # Displays info
  #   G4 P300000                                          # Waits 5 min for the bedtemp to stabilize
  # {% endif %}

  # Heating nozzle to 150 degrees. This helps with getting a correct Z-home
  SET_DISPLAY_TEXT MSG="Hotend: 150c"          # Displays info
  M109 S150                                    # Heats the nozzle to 150c

  #  Uncomment for V2 (Quad gantry level AKA QGL)
  SET_DISPLAY_TEXT MSG="QGL"      # Displays info
  STATUS_LEVELING                 # Sets SB-leds to leveling-mode
  quad_gantry_level               # Levels the buildplate via QGL

  # G1 X{x_wait} Y{y_wait} Z15 F9000  # Goes to center of the bed
  # M109 S{target_extruder}           # Heats the nozzle to printing temp
  # M106 S255
  # CLEAN_NOZZLE
  # G28 Z                             # Homes Z again after QGL
  # M109 S150                         # Heats the nozzle to 150c
  # M106 S0

  ##  Uncomment for bed mesh (2 of 2)
  SET_DISPLAY_TEXT MSG="Bed mesh"    # Displays info
  STATUS_MESHING                     # Sets SB-leds to bed mesh-mode
  bed_mesh_calibrate                 # Starts bed mesh
  CARTOGRAPHER_TOUCH                ; Perform touch probe

  # Heats up the nozzle up to target via data from slicer
  SET_DISPLAY_TEXT MSG="Hotend: {target_extruder}c"             # Displays info
  STATUS_HEATING                                                # Sets SB-leds to heating-mode
  G1 X{x_wait} Y{y_wait} Z15 F9000                              # Goes to center of the bed
  M107                                                          # Turns off partcooling fan
  M109 S{target_extruder}                                       # Heats the nozzle to printing temp

  # Gets ready to print by doing a purge line and updating the SB-leds
  SET_DISPLAY_TEXT MSG="Printer goes brr"          # Displays info
  # CLEAN_NOZZLE
  STATUS_PRINTING                                  # Sets SB-leds to printing-mode
  G0 Z2.4                                          # Raises Z to 0.4
  G91                                              # Incremental positioning 
  G1 E20 F1000                                     # Advance filament before purge
  VORON_PURGE
  G90                                              # Absolut position


############
# Print End
############
[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
   # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-20.0 F1000                 ; retract filament
    
    TURN_OFF_HEATERS
    
    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
    M107                                     ; turn off fan
    
    BED_MESH_CLEAR
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END
    status_ready


[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    PRINT_END
    BASE_CANCEL_PRINT

[idle_timeout]
gcode:
  {% if 'heaters' in printer %}
     TURN_OFF_HEATERS
  {% endif %}
  M84
  STATUS_OFF
#   A list of G-Code commands to execute on an idle timeout. See
#   docs/Command_Templates.md for G-Code format. The default is to run
#   "TURN_OFF_HEATERS" and "M84".
#timeout: 600
#   Idle time (in seconds) to wait before running the above G-Code
#   commands. The default is 600 seconds.

    

[gcode_macro CLEAN_NOZZLE]
description: "Use Bambu Nozzle cleaner to clean the nozzle"
variable_x_start: 190
variable_x_end: 230
variable_z_position: 2.7
variable_wipe_count: 5
variable_y_position: 300
variable_wipe_spd: 200
gcode:
  {% if "xyz" not in printer.toolhead.homed_axes %}
    G28
  {% endif %}

  G90 # Ensure printer in absolute positioning mode
  G0 Z10
  G0 X{x_start} Y{y_position} F{wipe_spd * 60}
  G0 Z{z_position} F{wipe_spd * 60}
  {% for i in range(wipe_count) %}
    G0 X{x_end} F{wipe_spd * 60}
    G0 X{x_start} F{wipe_spd * 60}
  {% endfor %}
  


######
# G32
######
[gcode_macro G32]
description: Perform Full Homing Routine
gcode:
    STATUS_HOMING
    SAVE_GCODE_STATE NAME=STATE_G32
    G90
    G28
    STATUS_LEVELING
    QUAD_GANTRY_LEVEL
    {% if not printer.motors_sync.applied %}
        SYNC_MOTORS
    {% endif %}
    G28 x y
    CLEAN_HOME_Z


    ##  Uncomment for for your size printer:
    #--------------------------------------------------------------------
    ##  Uncomment for 250mm build
    #G0 X125 Y125 Z30 F3600
    
    ##  Uncomment for 300 build
    G0 X150 Y150 Z30 F3600
    
    ##  Uncomment for 350mm build
    #G0 X175 Y175 Z30 F3600
    #--------------------------------------------------------------------
    RESTORE_GCODE_STATE NAME=STATE_G32
    STATUS_READY

[gcode_macro CLEAN_HOME_Z]
gcode:
    STATUS_CLEANING
    # CLEAN_NOZZLE
    G28 Z
    STATUS_READY


######
# G29
######
[gcode_macro G29]
description: Perform Print Start Routine
gcode:
    SAVE_GCODE_STATE NAME=STATE_G29
    G90
    QUAD_GANTRY_LEVEL
    G28
    RESTORE_GCODE_STATE NAME=STATE_G29
    STATUS_READY


##########
# Heatsoak
###########
[gcode_macro HEATSOAK]
description: Preheat the Printer to Reach Thermal Equilibrium
gcode:
  SAVE_GCODE_STATE NAME=STATE_HEATSOAK
  M104 S170
  M140 S115
  G28
  G90
  G0 X150 Y150 Z10 F3600
  M106 S255
  RESTORE_GCODE_STATE NAME=STATE_HEATSOAK


#######
# M600
#######
[gcode_macro CHANGE_COLOR]
description: Change The Filament Mid-Print
gcode:
    {% set X = params.X|default(200)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    #G1 E-.8 F2700
    G1 Z{Z} 
    G90
    G1 X{X} Y{Y} F30000
    G91
    #G1 E-50 F1000
    RESTORE_GCODE_STATE NAME=M600_state


#######
# M601
#######
[gcode_macro M601]
description: Pause The Current Running Print
gcode:
    PAUSE

[gcode_macro UNLOAD_FILAMENT]
variable_unload_distance:  100
variable_purge_distance:  25
gcode:
    {% set speed = params.SPEED|default(300) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity * 5 %}
    SAVE_GCODE_STATE NAME=unload_state
    G91
    G92 E0
    G1 E{purge_distance} F{speed} # purge
    G1 E-{unload_distance} F{max_velocity} # fast-unload
    RESTORE_GCODE_STATE NAME=unload_state


###########################
# Input Shaper Calibration
###########################
[gcode_macro IS_CAL]
description: Input Shaper Calibration
gcode:
    SET_VELOCITY_LIMIT ACCEL_TO_DECEL=7000
    SET_PRESSURE_ADVANCE ADVANCE=0
    SET_INPUT_SHAPER SHAPER_FREQ_X=0 SHAPER_FREQ_Y=0
    TUNING_TOWER COMMAND=SET_VELOCITY_LIMIT PARAMETER=ACCEL START=1500 STEP_DELTA=500 STEP_HEIGHT=5


###############################
# Pressure Advance Calibration
###############################
[gcode_macro PA_CAL]
description: Pressure Advance Calibration
gcode:
    TUNING_TOWER COMMAND=SET_PRESSURE_ADVANCE PARAMETER=ADVANCE START=0 FACTOR=.00


# ###############################
# # LED Controls ON
# ###############################
# [gcode_macro LED_ON]
# description: Control the LED
# gcode:
#     SET_PIN PIN=LED VALUE=1.00


# ###############################
# # LED Controls OFF
# ###############################
# [gcode_macro LED_OFF]
# description: Control the LED
# gcode:
#     SET_PIN PIN=LED VALUE=0

###############################
# XY Motors OFF
###############################
[gcode_macro xy_motors_off]
description: Control the LED
gcode:
  SET_STEPPER_ENABLE STEPPER=stepper_x ENABLE=0
  SET_STEPPER_ENABLE STEPPER=stepper_y ENABLE=0